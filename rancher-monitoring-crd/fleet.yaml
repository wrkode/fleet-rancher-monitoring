defaultNamespace: cattle-monitoring-system
helm:
  repo: https://charts.rancher.io
  chart: rancher-monitoring-crd
  version: 100.1.3+up19.0.3
  releaseName: rancher-monitoring-crd
  values:
    additionalPrometheusRulesMap: {}
    alertmanager:
      alertmanagerSpec:
        additionalPeers: null
        affinity: {}
        alertmanagerConfigNamespaceSelector: {}
        alertmanagerConfigSelector: {}
        clusterAdvertiseAddress: false
        configMaps: null
        containers: null
        externalUrl: null
        forceEnableClusterMode: false
        image:
          repository: rancher/mirrored-prometheus-alertmanager
          sha: ''
          tag: v0.22.2
        initContainers: null
        listenLocal: false
        logFormat: logfmt
        logLevel: info
        nodeSelector: {}
        paused: false
        podAntiAffinity: ''
        podAntiAffinityTopologyKey: kubernetes.io/hostname
        podMetadata: {}
        portName: web
        priorityClassName: ''
        replicas: 1
        resources:
          limits:
            cpu: 1000m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 100Mi
        retention: 120h
        routePrefix: /
        secrets: null
        securityContext:
          fsGroup: 2000
          runAsGroup: 2000
          runAsNonRoot: true
          runAsUser: 1000
        storage: {}
        tolerations: null
        topologySpreadConstraints: null
        useExistingSecret: false
        volumeMounts: null
        volumes: null
      annotations: {}
      apiVersion: v2
      config:
        global:
          resolve_timeout: 5m
        receivers:
          - name: 'null'
        route:
          group_by:
            - job
          group_interval: 5m
          group_wait: 30s
          receiver: 'null'
          repeat_interval: 12h
          routes:
            - match:
                alertname: Watchdog
              receiver: 'null'
        templates:
          - /etc/alertmanager/config/*.tmpl
      enabled: true
      ingress:
        annotations: {}
        enabled: false
        hosts: null
        labels: {}
        paths: null
        tls: null
      ingressPerReplica:
        annotations: {}
        enabled: false
        hostDomain: ''
        hostPrefix: ''
        labels: {}
        paths: null
        tlsSecretName: ''
        tlsSecretPerReplica:
          enabled: false
          prefix: alertmanager
      podDisruptionBudget:
        enabled: false
        maxUnavailable: ''
        minAvailable: 1
      secret:
        annotations: {}
      service:
        additionalPorts: null
        annotations: {}
        clusterIP: ''
        externalIPs: null
        labels: {}
        loadBalancerIP: ''
        loadBalancerSourceRanges: null
        nodePort: 30903
        port: 9093
        targetPort: 9093
        type: ClusterIP
      serviceAccount:
        annotations: {}
        create: true
        name: ''
      serviceMonitor:
        bearerTokenFile: null
        interval: ''
        metricRelabelings: null
        proxyUrl: ''
        relabelings: null
        scheme: ''
        selfMonitor: true
        tlsConfig: {}
      servicePerReplica:
        annotations: {}
        enabled: false
        loadBalancerSourceRanges: null
        nodePort: 30904
        port: 9093
        targetPort: 9093
        type: ClusterIP
      templateFiles:
        rancher_defaults.tmpl: >-
          {{- define "slack.rancher.text" -}}

          {{ template "rancher.text_multiple" . }}

          {{- end -}}


          {{- define "rancher.text_multiple" -}}

          *[GROUP - Details]*

          One or more alarms in this group have triggered a notification.


          {{- if gt (len .GroupLabels.Values) 0 }}

          *Group Labels:*
            {{- range .GroupLabels.SortedPairs }}
            • *{{ .Name }}:* `{{ .Value }}`
            {{- end }}
          {{- end }}

          {{- if .ExternalURL }}

          *Link to AlertManager:* {{ .ExternalURL }}

          {{- end }}


          {{- range .Alerts }}

          {{ template "rancher.text_single" . }}

          {{- end }}

          {{- end -}}


          {{- define "rancher.text_single" -}}

          {{- if .Labels.alertname }}

          *[ALERT - {{ .Labels.alertname }}]*

          {{- else }}

          *[ALERT]*

          {{- end }}

          {{- if .Labels.severity }}

          *Severity:* `{{ .Labels.severity }}`

          {{- end }}

          {{- if .Labels.cluster }}

          *Cluster:*  {{ .Labels.cluster }}

          {{- end }}

          {{- if .Annotations.summary }}

          *Summary:* {{ .Annotations.summary }}

          {{- end }}

          {{- if .Annotations.message }}

          *Message:* {{ .Annotations.message }}

          {{- end }}

          {{- if .Annotations.description }}

          *Description:* {{ .Annotations.description }}

          {{- end }}

          {{- if .Annotations.runbook_url }}

          *Runbook URL:* <{{ .Annotations.runbook_url }}|:spiral_note_pad:>

          {{- end }}

          {{- with .Labels }}

          {{- with .Remove (stringSlice "alertname" "severity" "cluster") }}

          {{- if gt (len .) 0 }}

          *Additional Labels:*
            {{- range .SortedPairs }}
            • *{{ .Name }}:* `{{ .Value }}`
            {{- end }}
          {{- end }}

          {{- end }}

          {{- end }}

          {{- with .Annotations }}

          {{- with .Remove (stringSlice "summary" "message" "description"
          "runbook_url") }}

          {{- if gt (len .) 0 }}

          *Additional Annotations:*
            {{- range .SortedPairs }}
            • *{{ .Name }}:* `{{ .Value }}`
            {{- end }}
          {{- end }}

          {{- end }}

          {{- end }}

          {{- end -}}
      tplConfig: false
    commonLabels: {}
    coreDns:
      enabled: true
      service:
        port: 9153
        targetPort: 9153
      serviceMonitor:
        interval: ''
        metricRelabelings: null
        proxyUrl: ''
        relabelings: null
    defaultRules:
      additionalRuleLabels: {}
      annotations: {}
      appNamespacesTarget: .*
      create: true
      labels: {}
      rules:
        alertmanager: true
        etcd: true
        general: true
        k8s: true
        kubeApiserver: true
        kubeApiserverAvailability: true
        kubeApiserverError: true
        kubeApiserverSlos: true
        kubePrometheusGeneral: true
        kubePrometheusNodeAlerting: true
        kubePrometheusNodeRecording: true
        kubeScheduler: true
        kubeStateMetrics: true
        kubelet: true
        kubernetesAbsent: true
        kubernetesApps: true
        kubernetesResources: true
        kubernetesStorage: true
        kubernetesSystem: true
        network: true
        node: true
        prometheus: true
        prometheusOperator: true
        time: true
      runbookUrl: >-
        https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#
    fullnameOverride: ''
    global:
      cattle:
        systemDefaultRegistry: ''
        windows:
          enabled: false
        clusterId: c-vrfqq
        clusterName: contests
        rkePathPrefix: ''
        rkeWindowsPathPrefix: ''
        url: https://rancher.azure.eng.rancher.space
      imagePullSecrets: null
      kubectl:
        pullPolicy: IfNotPresent
        repository: rancher/kubectl
        tag: v1.20.2
      rbac:
        create: true
        pspAnnotations: {}
        pspEnabled: true
        userRoles:
          aggregateToDefaultRoles: true
          create: true
      systemDefaultRegistry: ''
    grafana:
      additionalDataSources: null
      admin:
        existingSecret: ''
        passwordKey: admin-password
        userKey: admin-user
      adminPassword: prom-operator
      adminUser: admin
      affinity: {}
      autoscaling:
        enabled: false
      containerSecurityContext: {}
      dashboardProviders: {}
      dashboards: {}
      dashboardsConfigMaps: {}
      datasources: {}
      defaultDashboards:
        cleanupOnUninstall: false
        namespace: cattle-dashboards
        useExistingNamespace: false
      defaultDashboardsEnabled: true
      deploymentStrategy:
        type: Recreate
      downloadDashboards:
        env: {}
        envFromSecret: ''
        resources: {}
      downloadDashboardsImage:
        pullPolicy: IfNotPresent
        repository: rancher/mirrored-curlimages-curl
        sha: ''
        tag: 7.77.0
      enabled: true
      env: {}
      envFromSecret: ''
      envRenderSecret: {}
      envValueFrom: {}
      extraConfigmapMounts: null
      extraContainerVolumes:
        - emptyDir: {}
          name: nginx-home
        - configMap:
            items:
              - key: nginx.conf
                mode: 438
                path: nginx.conf
            name: grafana-nginx-proxy-config
          name: grafana-nginx
      extraContainers: |
        - name: grafana-proxy
          args:
          - nginx
          - -g
          - daemon off;
          - -c
          - /nginx/nginx.conf
          image: "{{ template "system_default_registry" . }}{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}"
          ports:
          - containerPort: 8080
            name: nginx-http
            protocol: TCP
          volumeMounts:
          - mountPath: /nginx
            name: grafana-nginx
          - mountPath: /var/cache/nginx
            name: nginx-home
          securityContext:
            runAsUser: 101
            runAsGroup: 101
      extraEmptyDirMounts: null
      extraExposePorts: null
      extraInitContainers: null
      extraLabels: {}
      extraSecretMounts: null
      extraVolumeMounts: null
      forceDeployDashboards: false
      forceDeployDatasources: false
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      grafana.ini:
        analytics:
          check_for_updates: true
        auth:
          disable_login_form: false
        auth.anonymous:
          enabled: true
          org_role: Viewer
        auth.basic:
          enabled: false
        dashboards:
          default_home_dashboard_path: /tmp/dashboards/rancher-default-home.json
        grafana_net:
          url: https://grafana.net
        log:
          mode: console
        paths:
          data: /var/lib/grafana/
          logs: /var/log/grafana
          plugins: /var/lib/grafana/plugins
          provisioning: /etc/grafana/provisioning
        security:
          allow_embedding: true
        users:
          auto_assign_org_role: Viewer
      hostAliases: null
      image:
        pullPolicy: IfNotPresent
        repository: rancher/mirrored-grafana-grafana
        sha: ''
        tag: 7.5.8
      imageRenderer:
        enabled: false
        env:
          HTTP_HOST: 0.0.0.0
        grafanaSubPath: ''
        hostAliases: null
        image:
          pullPolicy: Always
          repository: rancher/mirrored-grafana-grafana-image-renderer
          sha: ''
          tag: 3.0.1
        networkPolicy:
          limitEgress: false
          limitIngress: true
        podPortName: http
        priorityClassName: ''
        replicas: 1
        resources: {}
        revisionHistoryLimit: 10
        securityContext: {}
        service:
          enabled: true
          port: 8081
          portName: http
          targetPort: 8081
        serviceAccountName: ''
      ingress:
        annotations: {}
        enabled: false
        extraPaths: null
        hosts: null
        labels: {}
        path: /
        pathType: Prefix
        tls: null
      initChownData:
        enabled: true
        image:
          pullPolicy: IfNotPresent
          repository: rancher/mirrored-library-busybox
          sha: ''
          tag: 1.31.1
        resources: {}
      ldap:
        config: ''
        enabled: false
        existingSecret: ''
      livenessProbe:
        failureThreshold: 10
        httpGet:
          path: /api/health
          port: 3000
        initialDelaySeconds: 60
        timeoutSeconds: 30
      namespaceOverride: ''
      nodeSelector: {}
      notifiers: {}
      persistence:
        accessModes:
          - ReadWriteOnce
        enabled: false
        finalizers:
          - kubernetes.io/pvc-protection
        inMemory:
          enabled: false
        size: 10Gi
        type: pvc
      plugins: null
      podDisruptionBudget: {}
      podPortName: grafana
      proxy:
        image:
          repository: rancher/mirrored-library-nginx
          tag: 1.21.1-alpine
      rbac:
        create: true
        extraClusterRoleRules: null
        extraRoleRules: null
        namespaced: false
        pspAnnotations: {}
        pspEnabled: true
      readinessProbe:
        httpGet:
          path: /api/health
          port: 3000
      replicas: 1
      resources:
        limits:
          cpu: 200m
          memory: 200Mi
        requests:
          cpu: 100m
          memory: 100Mi
      revisionHistoryLimit: 10
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsNonRoot: true
        runAsUser: 472
      service:
        annotations: {}
        enabled: true
        labels: {}
        nodePort: 30950
        port: 80
        portName: nginx-http
        targetPort: 8080
        type: ClusterIP
      serviceAccount:
        create: true
      serviceMonitor:
        enabled: false
        interval: ''
        labels: {}
        metricRelabelings: null
        path: /metrics
        relabelings: null
        scheme: http
        scrapeTimeout: 30s
        selfMonitor: true
        tlsConfig: {}
      sidecar:
        dashboards:
          SCProvider: true
          annotations: {}
          defaultFolderName: null
          enabled: true
          folder: /tmp/dashboards
          folderAnnotation: null
          label: grafana_dashboard
          labelValue: null
          multicluster: false
          provider:
            allowUiUpdates: false
            disableDelete: false
            folder: ''
            foldersFromFilesStructure: false
            name: sidecarProvider
            orgid: 1
            type: file
          resource: both
          searchNamespace: cattle-dashboards
        datasources:
          annotations: {}
          createPrometheusReplicasDatasources: false
          defaultDatasourceEnabled: true
          enabled: true
          label: grafana_datasource
          labelValue: null
          resource: both
          searchNamespace: null
        enableUniqueFilenames: false
        image:
          repository: rancher/mirrored-kiwigrid-k8s-sidecar
          sha: ''
          tag: 1.12.2
        imagePullPolicy: IfNotPresent
        notifiers:
          enabled: false
          label: grafana_notifier
          resource: both
        resources: {}
      smtp:
        existingSecret: ''
        passwordKey: password
        userKey: user
      testFramework:
        enabled: true
        image: rancher/mirrored-bats-bats
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
        tag: v1.1.0
      tolerations: null
    hardenedKubelet:
      clients:
        affinity: {}
        command:
          - pushprox-client
        copyCertsImage:
          repository: rancher/mirrored-library-busybox
          tag: 1.31.1
        deployment:
          enabled: false
          replicas: 0
        enabled: true
        https:
          caCertFile: ''
          certDir: ''
          certFile: ''
          enabled: true
          insecureSkipVerify: true
          keyFile: ''
          useServiceAccountCredentials: true
        image:
          repository: rancher/pushprox-client
          tag: v0.1.0-rancher2-client
        nodeSelector: {}
        port: 10015
        proxyUrl: ''
        rbac:
          additionalRules:
            - nonResourceURLs:
                - /metrics/cadvisor
              verbs:
                - get
            - apiGroups:
                - ''
              resources:
                - nodes/metrics
              verbs:
                - get
        resources: {}
        tolerations:
          - effect: NoExecute
            operator: Exists
          - effect: NoSchedule
            operator: Exists
        useLocalhost: true
      component: kubelet
      enabled: false
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      metricsPort: 10250
      namespaceOverride: ''
      proxy:
        command:
          - pushprox-proxy
        enabled: true
        image:
          repository: rancher/pushprox-proxy
          tag: v0.1.0-rancher2-proxy
        nodeSelector: {}
        port: 8080
        resources: {}
        tolerations: null
      serviceMonitor:
        enabled: true
        endpoints:
          - honorLabels: true
            port: metrics
            relabelings:
              - sourceLabels:
                  - __metrics_path__
                targetLabel: metrics_path
          - honorLabels: true
            path: /metrics/cadvisor
            port: metrics
            relabelings:
              - sourceLabels:
                  - __metrics_path__
                targetLabel: metrics_path
          - honorLabels: true
            path: /metrics/probes
            port: metrics
            relabelings:
              - sourceLabels:
                  - __metrics_path__
                targetLabel: metrics_path
    hardenedNodeExporter:
      clients:
        affinity: {}
        command:
          - pushprox-client
        copyCertsImage:
          repository: rancher/mirrored-library-busybox
          tag: 1.31.1
        deployment:
          enabled: false
          replicas: 0
        enabled: true
        https:
          caCertFile: ''
          certDir: ''
          certFile: ''
          enabled: false
          insecureSkipVerify: false
          keyFile: ''
          useServiceAccountCredentials: false
        image:
          repository: rancher/pushprox-client
          tag: v0.1.0-rancher2-client
        nodeSelector: {}
        port: 10016
        proxyUrl: ''
        rbac:
          additionalRules: null
        resources: {}
        tolerations:
          - effect: NoExecute
            operator: Exists
          - effect: NoSchedule
            operator: Exists
        useLocalhost: true
      component: node-exporter
      enabled: false
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      metricsPort: 9796
      namespaceOverride: ''
      proxy:
        command:
          - pushprox-proxy
        enabled: true
        image:
          repository: rancher/pushprox-proxy
          tag: v0.1.0-rancher2-proxy
        nodeSelector: {}
        port: 8080
        resources: {}
        tolerations: null
      serviceMonitor:
        enabled: true
        endpoints:
          - port: metrics
    ingressNginx:
      enabled: true
      namespace: ingress-nginx
      service:
        port: 9913
        targetPort: 10254
      serviceMonitor:
        interval: ''
        metricRelabelings: null
        proxyUrl: ''
        relabelings: null
    k3sServer:
      clients:
        affinity: {}
        command:
          - pushprox-client
        copyCertsImage:
          repository: rancher/mirrored-library-busybox
          tag: 1.31.1
        deployment:
          enabled: false
          replicas: 0
        enabled: true
        https:
          caCertFile: ''
          certDir: ''
          certFile: ''
          enabled: true
          insecureSkipVerify: true
          keyFile: ''
          useServiceAccountCredentials: true
        image:
          repository: rancher/pushprox-client
          tag: v0.1.0-rancher2-client
        nodeSelector: {}
        port: 10013
        proxyUrl: ''
        rbac:
          additionalRules:
            - nonResourceURLs:
                - /metrics/cadvisor
              verbs:
                - get
            - apiGroups:
                - ''
              resources:
                - nodes/metrics
              verbs:
                - get
        resources: {}
        tolerations:
          - effect: NoExecute
            operator: Exists
          - effect: NoSchedule
            operator: Exists
        useLocalhost: true
      component: k3s-server
      enabled: false
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      metricsPort: 10250
      namespaceOverride: ''
      proxy:
        command:
          - pushprox-proxy
        enabled: true
        image:
          repository: rancher/pushprox-proxy
          tag: v0.1.0-rancher2-proxy
        nodeSelector: {}
        port: 8080
        resources: {}
        tolerations: null
      serviceMonitor:
        enabled: true
        endpoints:
          - honorLabels: true
            port: metrics
            relabelings:
              - sourceLabels:
                  - __metrics_path__
                targetLabel: metrics_path
          - honorLabels: true
            path: /metrics/cadvisor
            port: metrics
            relabelings:
              - sourceLabels:
                  - __metrics_path__
                targetLabel: metrics_path
          - honorLabels: true
            path: /metrics/probes
            port: metrics
            relabelings:
              - sourceLabels:
                  - __metrics_path__
                targetLabel: metrics_path
    kube-state-metrics:
      affinity: {}
      autosharding:
        enabled: false
      collectors:
        certificatesigningrequests: true
        configmaps: true
        cronjobs: true
        daemonsets: true
        deployments: true
        endpoints: true
        horizontalpodautoscalers: true
        ingresses: true
        jobs: true
        limitranges: true
        mutatingwebhookconfigurations: true
        namespaces: true
        networkpolicies: true
        nodes: true
        persistentvolumeclaims: true
        persistentvolumes: true
        poddisruptionbudgets: true
        pods: true
        replicasets: true
        replicationcontrollers: true
        resourcequotas: true
        secrets: true
        services: true
        statefulsets: true
        storageclasses: true
        validatingwebhookconfigurations: true
        verticalpodautoscalers: false
        volumeattachments: true
      containerSecurityContext: {}
      customLabels: {}
      extraArgs: null
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      hostNetwork: false
      image:
        pullPolicy: IfNotPresent
        repository: rancher/mirrored-kube-state-metrics-kube-state-metrics
        tag: v2.0.0
      imagePullSecrets: null
      kubeTargetVersionOverride: ''
      kubeconfig:
        enabled: false
      namespaceOverride: ''
      namespaces: ''
      nodeSelector: {}
      podAnnotations: {}
      podDisruptionBudget: {}
      podSecurityPolicy:
        additionalVolumes: null
        annotations: {}
        enabled: true
      prometheus:
        monitor:
          additionalLabels: {}
          enabled: false
          honorLabels: false
          namespace: ''
      prometheusScrape: true
      rbac:
        create: true
        useClusterRole: true
      replicas: 1
      resources:
        limits:
          cpu: 100m
          memory: 200Mi
        requests:
          cpu: 100m
          memory: 130Mi
      securityContext:
        enabled: true
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      selfMonitor:
        enabled: false
      service:
        annotations: {}
        loadBalancerIP: ''
        nodePort: 0
        port: 8080
        type: ClusterIP
      serviceAccount:
        annotations: {}
        create: true
        imagePullSecrets: null
      tolerations: null
    kubeAdmControllerManager:
      clients:
        affinity: {}
        command:
          - pushprox-client
        copyCertsImage:
          repository: rancher/mirrored-library-busybox
          tag: 1.31.1
        deployment:
          enabled: false
          replicas: 0
        enabled: true
        https:
          caCertFile: ''
          certDir: ''
          certFile: ''
          enabled: true
          insecureSkipVerify: true
          keyFile: ''
          useServiceAccountCredentials: true
        image:
          repository: rancher/pushprox-client
          tag: v0.1.0-rancher2-client
        nodeSelector:
          node-role.kubernetes.io/master: ''
        port: 10011
        proxyUrl: ''
        rbac:
          additionalRules: null
        resources: {}
        tolerations:
          - effect: NoExecute
            operator: Exists
          - effect: NoSchedule
            operator: Exists
        useLocalhost: true
      component: kube-controller-manager
      enabled: false
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      metricsPort: 10257
      namespaceOverride: ''
      proxy:
        command:
          - pushprox-proxy
        enabled: true
        image:
          repository: rancher/pushprox-proxy
          tag: v0.1.0-rancher2-proxy
        nodeSelector: {}
        port: 8080
        resources: {}
        tolerations: null
      serviceMonitor:
        enabled: true
        endpoints:
          - port: metrics
    kubeAdmEtcd:
      clients:
        affinity: {}
        command:
          - pushprox-client
        copyCertsImage:
          repository: rancher/mirrored-library-busybox
          tag: 1.31.1
        deployment:
          enabled: false
          replicas: 0
        enabled: true
        https:
          caCertFile: ''
          certDir: ''
          certFile: ''
          enabled: false
          insecureSkipVerify: false
          keyFile: ''
          useServiceAccountCredentials: false
        image:
          repository: rancher/pushprox-client
          tag: v0.1.0-rancher2-client
        nodeSelector:
          node-role.kubernetes.io/master: ''
        port: 10014
        proxyUrl: ''
        rbac:
          additionalRules: null
        resources: {}
        tolerations:
          - effect: NoExecute
            operator: Exists
          - effect: NoSchedule
            operator: Exists
        useLocalhost: true
      component: kube-etcd
      enabled: false
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      metricsPort: 2381
      namespaceOverride: ''
      proxy:
        command:
          - pushprox-proxy
        enabled: true
        image:
          repository: rancher/pushprox-proxy
          tag: v0.1.0-rancher2-proxy
        nodeSelector: {}
        port: 8080
        resources: {}
        tolerations: null
      serviceMonitor:
        enabled: true
        endpoints:
          - port: metrics
    kubeAdmProxy:
      clients:
        affinity: {}
        command:
          - pushprox-client
        copyCertsImage:
          repository: rancher/mirrored-library-busybox
          tag: 1.31.1
        deployment:
          enabled: false
          replicas: 0
        enabled: true
        https:
          caCertFile: ''
          certDir: ''
          certFile: ''
          enabled: false
          insecureSkipVerify: false
          keyFile: ''
          useServiceAccountCredentials: false
        image:
          repository: rancher/pushprox-client
          tag: v0.1.0-rancher2-client
        nodeSelector: {}
        port: 10013
        proxyUrl: ''
        rbac:
          additionalRules: null
        resources: {}
        tolerations:
          - effect: NoExecute
            operator: Exists
          - effect: NoSchedule
            operator: Exists
        useLocalhost: true
      component: kube-proxy
      enabled: false
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      metricsPort: 10249
      namespaceOverride: ''
      proxy:
        command:
          - pushprox-proxy
        enabled: true
        image:
          repository: rancher/pushprox-proxy
          tag: v0.1.0-rancher2-proxy
        nodeSelector: {}
        port: 8080
        resources: {}
        tolerations: null
      serviceMonitor:
        enabled: true
        endpoints:
          - port: metrics
    kubeAdmScheduler:
      clients:
        affinity: {}
        command:
          - pushprox-client
        copyCertsImage:
          repository: rancher/mirrored-library-busybox
          tag: 1.31.1
        deployment:
          enabled: false
          replicas: 0
        enabled: true
        https:
          caCertFile: ''
          certDir: ''
          certFile: ''
          enabled: true
          insecureSkipVerify: true
          keyFile: ''
          useServiceAccountCredentials: true
        image:
          repository: rancher/pushprox-client
          tag: v0.1.0-rancher2-client
        nodeSelector:
          node-role.kubernetes.io/master: ''
        port: 10012
        proxyUrl: ''
        rbac:
          additionalRules: null
        resources: {}
        tolerations:
          - effect: NoExecute
            operator: Exists
          - effect: NoSchedule
            operator: Exists
        useLocalhost: true
      component: kube-scheduler
      enabled: false
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      metricsPort: 10259
      namespaceOverride: ''
      proxy:
        command:
          - pushprox-proxy
        enabled: true
        image:
          repository: rancher/pushprox-proxy
          tag: v0.1.0-rancher2-proxy
        nodeSelector: {}
        port: 8080
        resources: {}
        tolerations: null
      serviceMonitor:
        enabled: true
        endpoints:
          - port: metrics
    kubeApiServer:
      enabled: true
      serviceMonitor:
        interval: ''
        jobLabel: component
        metricRelabelings: null
        proxyUrl: ''
        relabelings: null
        selector:
          matchLabels:
            component: apiserver
            provider: kubernetes
      tlsConfig:
        insecureSkipVerify: false
        serverName: kubernetes
    kubeControllerManager:
      enabled: false
      endpoints: null
      service:
        enabled: true
        port: 10252
        targetPort: 10252
      serviceMonitor:
        enabled: true
        https: false
        insecureSkipVerify: null
        interval: ''
        metricRelabelings: null
        proxyUrl: ''
        relabelings: null
        serverName: null
    kubeDns:
      enabled: false
      service:
        dnsmasq:
          port: 10054
          targetPort: 10054
        skydns:
          port: 10055
          targetPort: 10055
      serviceMonitor:
        dnsmasqMetricRelabelings: null
        dnsmasqRelabelings: null
        interval: ''
        metricRelabelings: null
        proxyUrl: ''
        relabelings: null
    kubeEtcd:
      enabled: false
      endpoints: null
      service:
        enabled: true
        port: 2379
        targetPort: 2379
      serviceMonitor:
        caFile: ''
        certFile: ''
        enabled: true
        insecureSkipVerify: false
        interval: ''
        keyFile: ''
        metricRelabelings: null
        proxyUrl: ''
        relabelings: null
        scheme: http
        serverName: ''
    kubeProxy:
      enabled: false
      endpoints: null
      service:
        enabled: true
        port: 10249
        targetPort: 10249
      serviceMonitor:
        enabled: true
        https: false
        interval: ''
        metricRelabelings: null
        proxyUrl: ''
        relabelings: null
    kubeScheduler:
      enabled: false
      endpoints: null
      service:
        enabled: true
        port: 10251
        targetPort: 10251
      serviceMonitor:
        enabled: true
        https: false
        insecureSkipVerify: null
        interval: ''
        metricRelabelings: null
        proxyUrl: ''
        relabelings: null
        serverName: null
    kubeStateMetrics:
      enabled: true
      serviceMonitor:
        interval: ''
        metricRelabelings: null
        namespaceOverride: ''
        proxyUrl: ''
        relabelings: null
        selectorOverride: {}
    kubeTargetVersionOverride: ''
    kubeVersionOverride: ''
    kubelet:
      enabled: true
      namespace: kube-system
      serviceMonitor:
        cAdvisor: true
        cAdvisorMetricRelabelings: null
        cAdvisorRelabelings:
          - sourceLabels:
              - __metrics_path__
            targetLabel: metrics_path
        https: true
        interval: ''
        metricRelabelings: null
        probes: true
        probesMetricRelabelings: null
        probesRelabelings:
          - sourceLabels:
              - __metrics_path__
            targetLabel: metrics_path
        proxyUrl: ''
        relabelings:
          - sourceLabels:
              - __metrics_path__
            targetLabel: metrics_path
        resource: false
        resourcePath: /metrics/resource/v1alpha1
        resourceRelabelings:
          - sourceLabels:
              - __metrics_path__
            targetLabel: metrics_path
    nameOverride: rancher-monitoring
    namespaceOverride: cattle-monitoring-system
    nodeExporter:
      enabled: true
      jobLabel: jobLabel
      serviceMonitor:
        interval: ''
        metricRelabelings: null
        proxyUrl: ''
        relabelings: null
        scrapeTimeout: ''
    prometheus:
      additionalPodMonitors: null
      additionalRulesForClusterRole: null
      additionalServiceMonitors: null
      annotations: {}
      enabled: true
      ingress:
        annotations: {}
        enabled: false
        hosts: null
        labels: {}
        paths: null
        tls: null
      ingressPerReplica:
        annotations: {}
        enabled: false
        hostDomain: ''
        hostPrefix: ''
        labels: {}
        paths: null
        tlsSecretName: ''
        tlsSecretPerReplica:
          enabled: false
          prefix: prometheus
      podDisruptionBudget:
        enabled: false
        maxUnavailable: ''
        minAvailable: 1
      podSecurityPolicy:
        allowedCapabilities: null
        allowedHostPaths: null
        volumes: null
      prometheusSpec:
        additionalAlertManagerConfigs: null
        additionalAlertRelabelConfigs: null
        additionalPrometheusSecretsAnnotations: {}
        additionalRemoteRead: null
        additionalRemoteWrite: null
        additionalScrapeConfigs: null
        additionalScrapeConfigsSecret: {}
        affinity: {}
        alertingEndpoints: null
        allowOverlappingBlocks: false
        apiserverConfig: {}
        arbitraryFSAccessThroughSMs: false
        configMaps: null
        containers: |
          - name: prometheus-proxy
            args:
            - nginx
            - -g
            - daemon off;
            - -c
            - /nginx/nginx.conf
            image: "{{ template "system_default_registry" . }}{{ .Values.prometheus.prometheusSpec.proxy.image.repository }}:{{ .Values.prometheus.prometheusSpec.proxy.image.tag }}"
            ports:
            - containerPort: 8081
              name: nginx-http
              protocol: TCP
            volumeMounts:
            - mountPath: /nginx
              name: prometheus-nginx
            - mountPath: /var/cache/nginx
              name: nginx-home
            securityContext:
              runAsUser: 101
              runAsGroup: 101
        disableCompaction: false
        enableAdminAPI: false
        enableFeatures: null
        enforcedNamespaceLabel: ''
        enforcedSampleLimit: false
        evaluationInterval: 1m
        externalLabels: {}
        externalUrl: ''
        ignoreNamespaceSelectors: false
        image:
          repository: rancher/mirrored-prometheus-prometheus
          sha: ''
          tag: v2.27.1
        initContainers: null
        listenLocal: false
        logFormat: logfmt
        logLevel: info
        nodeSelector: {}
        overrideHonorLabels: false
        overrideHonorTimestamps: false
        paused: false
        podAntiAffinity: ''
        podAntiAffinityTopologyKey: kubernetes.io/hostname
        podMetadata: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        portName: nginx-http
        priorityClassName: ''
        probeNamespaceSelector: {}
        probeSelector: {}
        probeSelectorNilUsesHelmValues: true
        prometheusExternalLabelName: ''
        prometheusExternalLabelNameClear: false
        prometheusRulesExcludedFromEnforce: null
        proxy:
          image:
            repository: rancher/mirrored-library-nginx
            tag: 1.21.1-alpine
        query: {}
        queryLogFile: false
        remoteRead: null
        remoteWrite: null
        remoteWriteDashboards: false
        replicaExternalLabelName: ''
        replicaExternalLabelNameClear: false
        replicas: 1
        resources:
          limits:
            cpu: 1000m
            memory: 1500Mi
          requests:
            cpu: 750m
            memory: 750Mi
        retention: 10d
        retentionSize: 50GiB
        routePrefix: /
        ruleNamespaceSelector: {}
        ruleSelector: {}
        ruleSelectorNilUsesHelmValues: false
        scrapeInterval: 1m
        scrapeTimeout: ''
        secrets: null
        securityContext:
          fsGroup: 2000
          runAsGroup: 2000
          runAsNonRoot: true
          runAsUser: 1000
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        shards: 1
        storageSpec: {}
        thanos: {}
        tolerations: null
        topologySpreadConstraints: null
        volumeMounts: null
        volumes:
          - emptyDir: {}
            name: nginx-home
          - configMap:
              defaultMode: 438
              name: prometheus-nginx-proxy-config
            name: prometheus-nginx
        walCompression: false
      service:
        annotations: {}
        clusterIP: ''
        externalIPs: null
        labels: {}
        loadBalancerIP: ''
        loadBalancerSourceRanges: null
        nodePort: 30090
        port: 9090
        sessionAffinity: ''
        targetPort: 8081
        type: ClusterIP
      serviceAccount:
        annotations: {}
        create: true
        name: ''
      serviceMonitor:
        bearerTokenFile: null
        interval: ''
        metricRelabelings: null
        relabelings: null
        scheme: ''
        selfMonitor: true
        tlsConfig: {}
      servicePerReplica:
        annotations: {}
        enabled: false
        loadBalancerSourceRanges: null
        nodePort: 30091
        port: 9090
        targetPort: 9090
        type: ClusterIP
      thanosIngress:
        annotations: {}
        enabled: false
        hosts: null
        labels: {}
        nodePort: 30901
        paths: null
        servicePort: 10901
        tls: null
      thanosService:
        annotations: {}
        clusterIP: None
        enabled: false
        labels: {}
        nodePort: 30901
        port: 10901
        portName: grpc
        targetPort: grpc
        type: ClusterIP
      thanosServiceExternal:
        annotations: {}
        enabled: false
        labels: {}
        nodePort: 30901
        port: 10901
        portName: grpc
        targetPort: grpc
        type: LoadBalancer
    prometheus-adapter:
      affinity: {}
      certManager:
        caCertDuration: 43800h
        certDuration: 8760h
        enabled: false
      dnsConfig: {}
      enabled: true
      extraArguments: null
      extraVolumeMounts: null
      extraVolumes: null
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      hostNetwork:
        enabled: false
      image:
        pullPolicy: IfNotPresent
        repository: rancher/mirrored-directxman12-k8s-prometheus-adapter
        tag: v0.8.4
      listenPort: 6443
      logLevel: 4
      metricsRelistInterval: 1m
      nodeSelector: {}
      podAnnotations: {}
      podDisruptionBudget:
        enabled: false
        maxUnavailable: 1
      podLabels: {}
      priorityClassName: ''
      prometheus:
        path: ''
        port: 9090
        url: http://rancher-monitoring-prometheus.cattle-monitoring-system.svc
      psp:
        create: true
      rbac:
        create: true
      replicas: 1
      resources: {}
      rules:
        custom: null
        default: true
        external: null
        resource: {}
      service:
        annotations: {}
        port: 443
        type: ClusterIP
      serviceAccount:
        annotations: {}
        create: true
      tls:
        ca: '# Public CA file that signed the APIService'
        certificate: '# Public key of the APIService'
        enable: false
        key: '# Private key of the APIService'
      tolerations: null
    prometheus-node-exporter:
      affinity: {}
      configmaps: null
      containerSecurityContext: {}
      dnsConfig: {}
      endpoints: null
      extraArgs:
        - >-
          --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
        - >-
          --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
      extraHostVolumeMounts: null
      extraInitContainers: null
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      hostNetwork: true
      hostRootFsMount: true
      image:
        pullPolicy: IfNotPresent
        repository: rancher/mirrored-prometheus-node-exporter
        tag: v1.1.2
      namespaceOverride: ''
      nodeSelector: {}
      podAnnotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
      podLabels:
        jobLabel: node-exporter
      prometheus:
        monitor:
          additionalLabels: {}
          enabled: false
          namespace: ''
          relabelings: null
          scheme: http
          scrapeTimeout: 10s
          tlsConfig: {}
      rbac:
        create: true
        pspAnnotations: {}
        pspEnabled: true
      resources:
        limits:
          cpu: 200m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 30Mi
      secrets: null
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      service:
        annotations:
          prometheus.io/scrape: 'true'
        listenOnAllInterfaces: true
        nodePort: null
        port: 9796
        targetPort: 9796
        type: ClusterIP
      serviceAccount:
        annotations: {}
        create: true
        imagePullSecrets: null
      sidecarVolumeMount: null
      sidecars: null
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
      updateStrategy:
        rollingUpdate:
          maxUnavailable: 1
        type: RollingUpdate
    prometheusOperator:
      admissionWebhooks:
        caBundle: ''
        certManager:
          enabled: false
        enabled: true
        failurePolicy: Fail
        patch:
          affinity: {}
          enabled: true
          image:
            pullPolicy: IfNotPresent
            repository: rancher/mirrored-jettech-kube-webhook-certgen
            sha: ''
            tag: v1.5.2
          nodeSelector: {}
          podAnnotations: {}
          priorityClassName: ''
          resources: {}
          securityContext:
            runAsGroup: 2000
            runAsNonRoot: true
            runAsUser: 2000
          tolerations: null
      affinity: {}
      alertmanagerInstanceNamespaces: null
      configReloaderCpu: 100m
      configReloaderMemory: 50Mi
      denyNamespaces: null
      dnsConfig: {}
      enabled: true
      hostNetwork: false
      image:
        pullPolicy: IfNotPresent
        repository: rancher/mirrored-prometheus-operator-prometheus-operator
        sha: ''
        tag: v0.48.0
      kubeletService:
        enabled: true
        namespace: kube-system
      namespaces: {}
      nodeSelector: {}
      podAnnotations: {}
      podLabels: {}
      prometheusConfigReloaderImage:
        repository: rancher/mirrored-prometheus-operator-prometheus-config-reloader
        sha: ''
        tag: v0.48.0
      prometheusInstanceNamespaces: null
      resources:
        limits:
          cpu: 200m
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 100Mi
      secretFieldSelector: ''
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      service:
        additionalPorts: null
        annotations: {}
        clusterIP: ''
        externalIPs: null
        labels: {}
        loadBalancerIP: ''
        loadBalancerSourceRanges: null
        nodePort: 30080
        nodePortTls: 30443
        type: ClusterIP
      serviceAccount:
        create: true
        name: ''
      serviceMonitor:
        interval: ''
        metricRelabelings: null
        relabelings: null
        scrapeTimeout: ''
        selfMonitor: true
      thanosRulerInstanceNamespaces: null
      tls:
        enabled: true
        internalPort: 8443
        tlsMinVersion: VersionTLS13
      tolerations: null
    rke2ControllerManager:
      clients:
        affinity: {}
        command:
          - pushprox-client
        copyCertsImage:
          repository: rancher/mirrored-library-busybox
          tag: 1.31.1
        deployment:
          enabled: false
          replicas: 0
        enabled: true
        https:
          caCertFile: ''
          certDir: ''
          certFile: ''
          enabled: false
          insecureSkipVerify: false
          keyFile: ''
          useServiceAccountCredentials: false
        image:
          repository: rancher/pushprox-client
          tag: v0.1.0-rancher2-client
        nodeSelector:
          node-role.kubernetes.io/master: 'true'
        port: 10011
        proxyUrl: ''
        rbac:
          additionalRules: null
        resources: {}
        tolerations:
          - effect: NoExecute
            operator: Exists
          - effect: NoSchedule
            operator: Exists
        useLocalhost: true
      component: kube-controller-manager
      enabled: false
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      metricsPort: 10252
      namespaceOverride: ''
      proxy:
        command:
          - pushprox-proxy
        enabled: true
        image:
          repository: rancher/pushprox-proxy
          tag: v0.1.0-rancher2-proxy
        nodeSelector: {}
        port: 8080
        resources: {}
        tolerations: null
      serviceMonitor:
        enabled: true
        endpoints:
          - port: metrics
    rke2Etcd:
      clients:
        affinity: {}
        command:
          - pushprox-client
        copyCertsImage:
          repository: rancher/mirrored-library-busybox
          tag: 1.31.1
        deployment:
          enabled: false
          replicas: 0
        enabled: true
        https:
          caCertFile: ''
          certDir: ''
          certFile: ''
          enabled: false
          insecureSkipVerify: false
          keyFile: ''
          useServiceAccountCredentials: false
        image:
          repository: rancher/pushprox-client
          tag: v0.1.0-rancher2-client
        nodeSelector:
          node-role.kubernetes.io/etcd: 'true'
        port: 10014
        proxyUrl: ''
        rbac:
          additionalRules: null
        resources: {}
        tolerations:
          - effect: NoExecute
            operator: Exists
          - effect: NoSchedule
            operator: Exists
        useLocalhost: true
      component: kube-etcd
      enabled: false
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      metricsPort: 2381
      namespaceOverride: ''
      proxy:
        command:
          - pushprox-proxy
        enabled: true
        image:
          repository: rancher/pushprox-proxy
          tag: v0.1.0-rancher2-proxy
        nodeSelector: {}
        port: 8080
        resources: {}
        tolerations: null
      serviceMonitor:
        enabled: true
        endpoints:
          - port: metrics
    rke2IngressNginx:
      clients:
        affinity:
          podAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - controller
                namespaces:
                  - kube-system
                topologyKey: kubernetes.io/hostname
        command:
          - pushprox-client
        copyCertsImage:
          repository: rancher/mirrored-library-busybox
          tag: 1.31.1
        deployment:
          enabled: false
          replicas: 1
        enabled: true
        https:
          caCertFile: ''
          certDir: ''
          certFile: ''
          enabled: false
          insecureSkipVerify: false
          keyFile: ''
          useServiceAccountCredentials: false
        image:
          repository: rancher/pushprox-client
          tag: v0.1.0-rancher2-client
        nodeSelector: {}
        port: 10015
        proxyUrl: ''
        rbac:
          additionalRules: null
        resources: {}
        tolerations:
          - effect: NoExecute
            operator: Exists
          - effect: NoSchedule
            operator: Exists
        useLocalhost: true
      component: ingress-nginx
      enabled: false
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      metricsPort: 10254
      namespaceOverride: ''
      proxy:
        command:
          - pushprox-proxy
        enabled: true
        image:
          repository: rancher/pushprox-proxy
          tag: v0.1.0-rancher2-proxy
        nodeSelector: {}
        port: 8080
        resources: {}
        tolerations: null
      serviceMonitor:
        enabled: true
        endpoints:
          - port: metrics
    rke2Proxy:
      clients:
        affinity: {}
        command:
          - pushprox-client
        copyCertsImage:
          repository: rancher/mirrored-library-busybox
          tag: 1.31.1
        deployment:
          enabled: false
          replicas: 0
        enabled: true
        https:
          caCertFile: ''
          certDir: ''
          certFile: ''
          enabled: false
          insecureSkipVerify: false
          keyFile: ''
          useServiceAccountCredentials: false
        image:
          repository: rancher/pushprox-client
          tag: v0.1.0-rancher2-client
        nodeSelector: {}
        port: 10013
        proxyUrl: ''
        rbac:
          additionalRules: null
        resources: {}
        tolerations: null
        useLocalhost: true
      component: kube-proxy
      enabled: false
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      metricsPort: 10249
      namespaceOverride: ''
      proxy:
        command:
          - pushprox-proxy
        enabled: true
        image:
          repository: rancher/pushprox-proxy
          tag: v0.1.0-rancher2-proxy
        nodeSelector: {}
        port: 8080
        resources: {}
        tolerations: null
      serviceMonitor:
        enabled: true
        endpoints:
          - port: metrics
      tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    rke2Scheduler:
      clients:
        affinity: {}
        command:
          - pushprox-client
        copyCertsImage:
          repository: rancher/mirrored-library-busybox
          tag: 1.31.1
        deployment:
          enabled: false
          replicas: 0
        enabled: true
        https:
          caCertFile: ''
          certDir: ''
          certFile: ''
          enabled: false
          insecureSkipVerify: false
          keyFile: ''
          useServiceAccountCredentials: false
        image:
          repository: rancher/pushprox-client
          tag: v0.1.0-rancher2-client
        nodeSelector:
          node-role.kubernetes.io/master: 'true'
        port: 10012
        proxyUrl: ''
        rbac:
          additionalRules: null
        resources: {}
        tolerations:
          - effect: NoExecute
            operator: Exists
          - effect: NoSchedule
            operator: Exists
        useLocalhost: true
      component: kube-scheduler
      enabled: false
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      metricsPort: 10251
      namespaceOverride: ''
      proxy:
        command:
          - pushprox-proxy
        enabled: true
        image:
          repository: rancher/pushprox-proxy
          tag: v0.1.0-rancher2-proxy
        nodeSelector: {}
        port: 8080
        resources: {}
        tolerations: null
      serviceMonitor:
        enabled: true
        endpoints:
          - port: metrics
    rkeControllerManager:
      clients:
        affinity: {}
        command:
          - pushprox-client
        copyCertsImage:
          repository: rancher/mirrored-library-busybox
          tag: 1.31.1
        deployment:
          enabled: false
          replicas: 0
        enabled: true
        https:
          caCertFile: ''
          certDir: ''
          certFile: ''
          enabled: false
          insecureSkipVerify: false
          keyFile: ''
          useServiceAccountCredentials: false
        image:
          repository: rancher/pushprox-client
          tag: v0.1.0-rancher2-client
        nodeSelector:
          node-role.kubernetes.io/controlplane: 'true'
        port: 10011
        proxyUrl: ''
        rbac:
          additionalRules: null
        resources: {}
        tolerations:
          - effect: NoExecute
            operator: Exists
          - effect: NoSchedule
            operator: Exists
        useLocalhost: true
      component: kube-controller-manager
      enabled: true
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      metricsPort: 10252
      namespaceOverride: ''
      proxy:
        command:
          - pushprox-proxy
        enabled: true
        image:
          repository: rancher/pushprox-proxy
          tag: v0.1.0-rancher2-proxy
        nodeSelector: {}
        port: 8080
        resources: {}
        tolerations: null
      serviceMonitor:
        enabled: true
        endpoints:
          - port: metrics
            proxyUrl: >-
              http://pushprox-kube-controller-manager-proxy.cattle-monitoring-system.svc:8080
    rkeEtcd:
      clients:
        affinity: {}
        command:
          - pushprox-client
        copyCertsImage:
          repository: rancher/mirrored-library-busybox
          tag: 1.31.1
        deployment:
          enabled: false
          replicas: 0
        enabled: true
        https:
          caCertFile: kube-ca.pem
          certDir: /etc/kubernetes/ssl
          certFile: kube-etcd-*.pem
          enabled: true
          insecureSkipVerify: false
          keyFile: kube-etcd-*-key.pem
          useServiceAccountCredentials: false
        image:
          repository: rancher/pushprox-client
          tag: v0.1.0-rancher2-client
        nodeSelector:
          node-role.kubernetes.io/etcd: 'true'
        port: 10014
        proxyUrl: ''
        rbac:
          additionalRules: null
        resources: {}
        tolerations:
          - effect: NoExecute
            operator: Exists
          - effect: NoSchedule
            operator: Exists
        useLocalhost: false
      component: kube-etcd
      enabled: true
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      metricsPort: 2379
      namespaceOverride: ''
      proxy:
        command:
          - pushprox-proxy
        enabled: true
        image:
          repository: rancher/pushprox-proxy
          tag: v0.1.0-rancher2-proxy
        nodeSelector: {}
        port: 8080
        resources: {}
        tolerations: null
      serviceMonitor:
        enabled: true
        endpoints:
          - params:
              _scheme:
                - https
            port: metrics
            proxyUrl: http://pushprox-kube-etcd-proxy.cattle-monitoring-system.svc:8080
    rkeIngressNginx:
      clients:
        affinity: {}
        command:
          - pushprox-client
        copyCertsImage:
          repository: rancher/mirrored-library-busybox
          tag: 1.31.1
        deployment:
          enabled: false
          replicas: 0
        enabled: true
        https:
          caCertFile: ''
          certDir: ''
          certFile: ''
          enabled: false
          insecureSkipVerify: false
          keyFile: ''
          useServiceAccountCredentials: false
        image:
          repository: rancher/pushprox-client
          tag: v0.1.0-rancher2-client
        nodeSelector:
          node-role.kubernetes.io/worker: 'true'
        port: 10015
        proxyUrl: ''
        rbac:
          additionalRules: null
        resources: {}
        tolerations:
          - effect: NoExecute
            operator: Exists
          - effect: NoSchedule
            operator: Exists
        useLocalhost: true
      component: ingress-nginx
      enabled: false
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      metricsPort: 10254
      namespaceOverride: ''
      proxy:
        command:
          - pushprox-proxy
        enabled: true
        image:
          repository: rancher/pushprox-proxy
          tag: v0.1.0-rancher2-proxy
        nodeSelector: {}
        port: 8080
        resources: {}
        tolerations: null
      serviceMonitor:
        enabled: true
        endpoints:
          - port: metrics
    rkeProxy:
      clients:
        affinity: {}
        command:
          - pushprox-client
        copyCertsImage:
          repository: rancher/mirrored-library-busybox
          tag: 1.31.1
        deployment:
          enabled: false
          replicas: 0
        enabled: true
        https:
          caCertFile: ''
          certDir: ''
          certFile: ''
          enabled: false
          insecureSkipVerify: false
          keyFile: ''
          useServiceAccountCredentials: false
        image:
          repository: rancher/pushprox-client
          tag: v0.1.0-rancher2-client
        nodeSelector: {}
        port: 10013
        proxyUrl: ''
        rbac:
          additionalRules: null
        resources: {}
        tolerations:
          - effect: NoExecute
            operator: Exists
          - effect: NoSchedule
            operator: Exists
        useLocalhost: true
      component: kube-proxy
      enabled: true
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      metricsPort: 10249
      namespaceOverride: ''
      proxy:
        command:
          - pushprox-proxy
        enabled: true
        image:
          repository: rancher/pushprox-proxy
          tag: v0.1.0-rancher2-proxy
        nodeSelector: {}
        port: 8080
        resources: {}
        tolerations: null
      serviceMonitor:
        enabled: true
        endpoints:
          - port: metrics
            proxyUrl: http://pushprox-kube-proxy-proxy.cattle-monitoring-system.svc:8080
    rkeScheduler:
      clients:
        affinity: {}
        command:
          - pushprox-client
        copyCertsImage:
          repository: rancher/mirrored-library-busybox
          tag: 1.31.1
        deployment:
          enabled: false
          replicas: 0
        enabled: true
        https:
          caCertFile: ''
          certDir: ''
          certFile: ''
          enabled: false
          insecureSkipVerify: false
          keyFile: ''
          useServiceAccountCredentials: false
        image:
          repository: rancher/pushprox-client
          tag: v0.1.0-rancher2-client
        nodeSelector:
          node-role.kubernetes.io/controlplane: 'true'
        port: 10012
        proxyUrl: ''
        rbac:
          additionalRules: null
        resources: {}
        tolerations:
          - effect: NoExecute
            operator: Exists
          - effect: NoSchedule
            operator: Exists
        useLocalhost: true
      component: kube-scheduler
      enabled: true
      global:
        cattle:
          clusterId: c-vrfqq
          clusterName: contests
          rkePathPrefix: ''
          rkeWindowsPathPrefix: ''
          systemDefaultRegistry: ''
          url: https://rancher.azure.eng.rancher.space
          windows:
            enabled: false
        imagePullSecrets: null
        kubectl:
          pullPolicy: IfNotPresent
          repository: rancher/kubectl
          tag: v1.20.2
        rbac:
          create: true
          pspAnnotations: {}
          pspEnabled: true
          userRoles:
            aggregateToDefaultRoles: true
            create: true
        systemDefaultRegistry: ''
      metricsPort: 10251
      namespaceOverride: ''
      proxy:
        command:
          - pushprox-proxy
        enabled: true
        image:
          repository: rancher/pushprox-proxy
          tag: v0.1.0-rancher2-proxy
        nodeSelector: {}
        port: 8080
        resources: {}
        tolerations: null
      serviceMonitor:
        enabled: true
        endpoints:
          - port: metrics
            proxyUrl: http://pushprox-kube-scheduler-proxy.cattle-monitoring-system.svc:8080
